/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/kubernetes-sigs/poseidon/pkg/stats (interfaces: PoseidonStatsClient,PoseidonStats_ReceiveNodeStatsClient,PoseidonStats_ReceivePodStatsClient,PoseidonStatsServer,PoseidonStats_ReceiveNodeStatsServer,PoseidonStats_ReceivePodStatsServer)

package stats

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
	metadata "google.golang.org/grpc/metadata"
)

// Mock of PoseidonStatsClient interface
type MockPoseidonStatsClient struct {
	ctrl     *gomock.Controller
	recorder *_MockPoseidonStatsClientRecorder
}

// Recorder for MockPoseidonStatsClient (not exported)
type _MockPoseidonStatsClientRecorder struct {
	mock *MockPoseidonStatsClient
}

func NewMockPoseidonStatsClient(ctrl *gomock.Controller) *MockPoseidonStatsClient {
	mock := &MockPoseidonStatsClient{ctrl: ctrl}
	mock.recorder = &_MockPoseidonStatsClientRecorder{mock}
	return mock
}

func (_m *MockPoseidonStatsClient) EXPECT() *_MockPoseidonStatsClientRecorder {
	return _m.recorder
}

func (_m *MockPoseidonStatsClient) ReceiveNodeStats(_param0 context.Context, _param1 ...grpc.CallOption) (PoseidonStats_ReceiveNodeStatsClient, error) {
	_s := []interface{}{_param0}
	for _, _x := range _param1 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "ReceiveNodeStats", _s...)
	ret0, _ := ret[0].(PoseidonStats_ReceiveNodeStatsClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPoseidonStatsClientRecorder) ReceiveNodeStats(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReceiveNodeStats", _s...)
}

func (_m *MockPoseidonStatsClient) ReceivePodStats(_param0 context.Context, _param1 ...grpc.CallOption) (PoseidonStats_ReceivePodStatsClient, error) {
	_s := []interface{}{_param0}
	for _, _x := range _param1 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "ReceivePodStats", _s...)
	ret0, _ := ret[0].(PoseidonStats_ReceivePodStatsClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPoseidonStatsClientRecorder) ReceivePodStats(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReceivePodStats", _s...)
}

// Mock of PoseidonStats_ReceiveNodeStatsClient interface
type MockPoseidonStats_ReceiveNodeStatsClient struct {
	ctrl     *gomock.Controller
	recorder *_MockPoseidonStats_ReceiveNodeStatsClientRecorder
}

// Recorder for MockPoseidonStats_ReceiveNodeStatsClient (not exported)
type _MockPoseidonStats_ReceiveNodeStatsClientRecorder struct {
	mock *MockPoseidonStats_ReceiveNodeStatsClient
}

func NewMockPoseidonStats_ReceiveNodeStatsClient(ctrl *gomock.Controller) *MockPoseidonStats_ReceiveNodeStatsClient {
	mock := &MockPoseidonStats_ReceiveNodeStatsClient{ctrl: ctrl}
	mock.recorder = &_MockPoseidonStats_ReceiveNodeStatsClientRecorder{mock}
	return mock
}

func (_m *MockPoseidonStats_ReceiveNodeStatsClient) EXPECT() *_MockPoseidonStats_ReceiveNodeStatsClientRecorder {
	return _m.recorder
}

func (_m *MockPoseidonStats_ReceiveNodeStatsClient) CloseSend() error {
	ret := _m.ctrl.Call(_m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsClientRecorder) CloseSend() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CloseSend")
}

func (_m *MockPoseidonStats_ReceiveNodeStatsClient) Context() context.Context {
	ret := _m.ctrl.Call(_m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsClientRecorder) Context() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Context")
}

func (_m *MockPoseidonStats_ReceiveNodeStatsClient) Header() (metadata.MD, error) {
	ret := _m.ctrl.Call(_m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsClientRecorder) Header() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Header")
}

func (_m *MockPoseidonStats_ReceiveNodeStatsClient) Recv() (*NodeStatsResponse, error) {
	ret := _m.ctrl.Call(_m, "Recv")
	ret0, _ := ret[0].(*NodeStatsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsClientRecorder) Recv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Recv")
}

func (_m *MockPoseidonStats_ReceiveNodeStatsClient) RecvMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "RecvMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsClientRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RecvMsg", arg0)
}

func (_m *MockPoseidonStats_ReceiveNodeStatsClient) Send(_param0 *NodeStats) error {
	ret := _m.ctrl.Call(_m, "Send", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsClientRecorder) Send(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0)
}

func (_m *MockPoseidonStats_ReceiveNodeStatsClient) SendMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "SendMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsClientRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendMsg", arg0)
}

func (_m *MockPoseidonStats_ReceiveNodeStatsClient) Trailer() metadata.MD {
	ret := _m.ctrl.Call(_m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsClientRecorder) Trailer() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Trailer")
}

// Mock of PoseidonStats_ReceivePodStatsClient interface
type MockPoseidonStats_ReceivePodStatsClient struct {
	ctrl     *gomock.Controller
	recorder *_MockPoseidonStats_ReceivePodStatsClientRecorder
}

// Recorder for MockPoseidonStats_ReceivePodStatsClient (not exported)
type _MockPoseidonStats_ReceivePodStatsClientRecorder struct {
	mock *MockPoseidonStats_ReceivePodStatsClient
}

func NewMockPoseidonStats_ReceivePodStatsClient(ctrl *gomock.Controller) *MockPoseidonStats_ReceivePodStatsClient {
	mock := &MockPoseidonStats_ReceivePodStatsClient{ctrl: ctrl}
	mock.recorder = &_MockPoseidonStats_ReceivePodStatsClientRecorder{mock}
	return mock
}

func (_m *MockPoseidonStats_ReceivePodStatsClient) EXPECT() *_MockPoseidonStats_ReceivePodStatsClientRecorder {
	return _m.recorder
}

func (_m *MockPoseidonStats_ReceivePodStatsClient) CloseSend() error {
	ret := _m.ctrl.Call(_m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsClientRecorder) CloseSend() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CloseSend")
}

func (_m *MockPoseidonStats_ReceivePodStatsClient) Context() context.Context {
	ret := _m.ctrl.Call(_m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsClientRecorder) Context() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Context")
}

func (_m *MockPoseidonStats_ReceivePodStatsClient) Header() (metadata.MD, error) {
	ret := _m.ctrl.Call(_m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPoseidonStats_ReceivePodStatsClientRecorder) Header() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Header")
}

func (_m *MockPoseidonStats_ReceivePodStatsClient) Recv() (*PodStatsResponse, error) {
	ret := _m.ctrl.Call(_m, "Recv")
	ret0, _ := ret[0].(*PodStatsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPoseidonStats_ReceivePodStatsClientRecorder) Recv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Recv")
}

func (_m *MockPoseidonStats_ReceivePodStatsClient) RecvMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "RecvMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsClientRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RecvMsg", arg0)
}

func (_m *MockPoseidonStats_ReceivePodStatsClient) Send(_param0 *PodStats) error {
	ret := _m.ctrl.Call(_m, "Send", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsClientRecorder) Send(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0)
}

func (_m *MockPoseidonStats_ReceivePodStatsClient) SendMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "SendMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsClientRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendMsg", arg0)
}

func (_m *MockPoseidonStats_ReceivePodStatsClient) Trailer() metadata.MD {
	ret := _m.ctrl.Call(_m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsClientRecorder) Trailer() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Trailer")
}

// Mock of PoseidonStatsServer interface
type MockPoseidonStatsServer struct {
	ctrl     *gomock.Controller
	recorder *_MockPoseidonStatsServerRecorder
}

// Recorder for MockPoseidonStatsServer (not exported)
type _MockPoseidonStatsServerRecorder struct {
	mock *MockPoseidonStatsServer
}

func NewMockPoseidonStatsServer(ctrl *gomock.Controller) *MockPoseidonStatsServer {
	mock := &MockPoseidonStatsServer{ctrl: ctrl}
	mock.recorder = &_MockPoseidonStatsServerRecorder{mock}
	return mock
}

func (_m *MockPoseidonStatsServer) EXPECT() *_MockPoseidonStatsServerRecorder {
	return _m.recorder
}

func (_m *MockPoseidonStatsServer) ReceiveNodeStats(_param0 PoseidonStats_ReceiveNodeStatsServer) error {
	ret := _m.ctrl.Call(_m, "ReceiveNodeStats", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStatsServerRecorder) ReceiveNodeStats(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReceiveNodeStats", arg0)
}

func (_m *MockPoseidonStatsServer) ReceivePodStats(_param0 PoseidonStats_ReceivePodStatsServer) error {
	ret := _m.ctrl.Call(_m, "ReceivePodStats", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStatsServerRecorder) ReceivePodStats(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReceivePodStats", arg0)
}

// Mock of PoseidonStats_ReceiveNodeStatsServer interface
type MockPoseidonStats_ReceiveNodeStatsServer struct {
	ctrl     *gomock.Controller
	recorder *_MockPoseidonStats_ReceiveNodeStatsServerRecorder
}

// Recorder for MockPoseidonStats_ReceiveNodeStatsServer (not exported)
type _MockPoseidonStats_ReceiveNodeStatsServerRecorder struct {
	mock *MockPoseidonStats_ReceiveNodeStatsServer
}

func NewMockPoseidonStats_ReceiveNodeStatsServer(ctrl *gomock.Controller) *MockPoseidonStats_ReceiveNodeStatsServer {
	mock := &MockPoseidonStats_ReceiveNodeStatsServer{ctrl: ctrl}
	mock.recorder = &_MockPoseidonStats_ReceiveNodeStatsServerRecorder{mock}
	return mock
}

func (_m *MockPoseidonStats_ReceiveNodeStatsServer) EXPECT() *_MockPoseidonStats_ReceiveNodeStatsServerRecorder {
	return _m.recorder
}

func (_m *MockPoseidonStats_ReceiveNodeStatsServer) Context() context.Context {
	ret := _m.ctrl.Call(_m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsServerRecorder) Context() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Context")
}

func (_m *MockPoseidonStats_ReceiveNodeStatsServer) Recv() (*NodeStats, error) {
	ret := _m.ctrl.Call(_m, "Recv")
	ret0, _ := ret[0].(*NodeStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsServerRecorder) Recv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Recv")
}

func (_m *MockPoseidonStats_ReceiveNodeStatsServer) RecvMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "RecvMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsServerRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RecvMsg", arg0)
}

func (_m *MockPoseidonStats_ReceiveNodeStatsServer) Send(_param0 *NodeStatsResponse) error {
	ret := _m.ctrl.Call(_m, "Send", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsServerRecorder) Send(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0)
}

func (_m *MockPoseidonStats_ReceiveNodeStatsServer) SendHeader(_param0 metadata.MD) error {
	ret := _m.ctrl.Call(_m, "SendHeader", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsServerRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendHeader", arg0)
}

func (_m *MockPoseidonStats_ReceiveNodeStatsServer) SendMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "SendMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsServerRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendMsg", arg0)
}

func (_m *MockPoseidonStats_ReceiveNodeStatsServer) SetHeader(_param0 metadata.MD) error {
	ret := _m.ctrl.Call(_m, "SetHeader", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsServerRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetHeader", arg0)
}

func (_m *MockPoseidonStats_ReceiveNodeStatsServer) SetTrailer(_param0 metadata.MD) {
	_m.ctrl.Call(_m, "SetTrailer", _param0)
}

func (_mr *_MockPoseidonStats_ReceiveNodeStatsServerRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetTrailer", arg0)
}

// Mock of PoseidonStats_ReceivePodStatsServer interface
type MockPoseidonStats_ReceivePodStatsServer struct {
	ctrl     *gomock.Controller
	recorder *_MockPoseidonStats_ReceivePodStatsServerRecorder
}

// Recorder for MockPoseidonStats_ReceivePodStatsServer (not exported)
type _MockPoseidonStats_ReceivePodStatsServerRecorder struct {
	mock *MockPoseidonStats_ReceivePodStatsServer
}

func NewMockPoseidonStats_ReceivePodStatsServer(ctrl *gomock.Controller) *MockPoseidonStats_ReceivePodStatsServer {
	mock := &MockPoseidonStats_ReceivePodStatsServer{ctrl: ctrl}
	mock.recorder = &_MockPoseidonStats_ReceivePodStatsServerRecorder{mock}
	return mock
}

func (_m *MockPoseidonStats_ReceivePodStatsServer) EXPECT() *_MockPoseidonStats_ReceivePodStatsServerRecorder {
	return _m.recorder
}

func (_m *MockPoseidonStats_ReceivePodStatsServer) Context() context.Context {
	ret := _m.ctrl.Call(_m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsServerRecorder) Context() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Context")
}

func (_m *MockPoseidonStats_ReceivePodStatsServer) Recv() (*PodStats, error) {
	ret := _m.ctrl.Call(_m, "Recv")
	ret0, _ := ret[0].(*PodStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPoseidonStats_ReceivePodStatsServerRecorder) Recv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Recv")
}

func (_m *MockPoseidonStats_ReceivePodStatsServer) RecvMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "RecvMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsServerRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RecvMsg", arg0)
}

func (_m *MockPoseidonStats_ReceivePodStatsServer) Send(_param0 *PodStatsResponse) error {
	ret := _m.ctrl.Call(_m, "Send", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsServerRecorder) Send(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0)
}

func (_m *MockPoseidonStats_ReceivePodStatsServer) SendHeader(_param0 metadata.MD) error {
	ret := _m.ctrl.Call(_m, "SendHeader", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsServerRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendHeader", arg0)
}

func (_m *MockPoseidonStats_ReceivePodStatsServer) SendMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "SendMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsServerRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendMsg", arg0)
}

func (_m *MockPoseidonStats_ReceivePodStatsServer) SetHeader(_param0 metadata.MD) error {
	ret := _m.ctrl.Call(_m, "SetHeader", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockPoseidonStats_ReceivePodStatsServerRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetHeader", arg0)
}

func (_m *MockPoseidonStats_ReceivePodStatsServer) SetTrailer(_param0 metadata.MD) {
	_m.ctrl.Call(_m, "SetTrailer", _param0)
}

func (_mr *_MockPoseidonStats_ReceivePodStatsServerRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetTrailer", arg0)
}
